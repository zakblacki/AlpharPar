//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AlphaParWebApplication.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AlphaParWcfServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class ServiceFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/AlphaParWcfServiceLibrary.Models")]
    [System.SerializableAttribute()]
    public partial class Client : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string addressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string firstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string lastnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phoneField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string address {
            get {
                return this.addressField;
            }
            set {
                if ((object.ReferenceEquals(this.addressField, value) != true)) {
                    this.addressField = value;
                    this.RaisePropertyChanged("address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string firstname {
            get {
                return this.firstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.firstnameField, value) != true)) {
                    this.firstnameField = value;
                    this.RaisePropertyChanged("firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string lastname {
            get {
                return this.lastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.lastnameField, value) != true)) {
                    this.lastnameField = value;
                    this.RaisePropertyChanged("lastname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneField, value) != true)) {
                    this.phoneField = value;
                    this.RaisePropertyChanged("phone");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/LoginWithAD", ReplyAction="http://tempuri.org/IService/LoginWithADResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AlphaParWebApplication.ServiceReference1.ServiceFault), Action="http://tempuri.org/IService/LoginWithADServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AlphaParWcfServiceLibrary")]
        string LoginWithAD(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/LoginWithAD", ReplyAction="http://tempuri.org/IService/LoginWithADResponse")]
        System.Threading.Tasks.Task<string> LoginWithADAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUsernameByToken", ReplyAction="http://tempuri.org/IService/GetUsernameByTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AlphaParWebApplication.ServiceReference1.ServiceFault), Action="http://tempuri.org/IService/GetUsernameByTokenServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AlphaParWcfServiceLibrary")]
        string GetUsernameByToken(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetUsernameByToken", ReplyAction="http://tempuri.org/IService/GetUsernameByTokenResponse")]
        System.Threading.Tasks.Task<string> GetUsernameByTokenAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetClients", ReplyAction="http://tempuri.org/IService/GetClientsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AlphaParWebApplication.ServiceReference1.ServiceFault), Action="http://tempuri.org/IService/GetClientsServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AlphaParWcfServiceLibrary")]
        AlphaParWebApplication.ServiceReference1.Client[] GetClients(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetClients", ReplyAction="http://tempuri.org/IService/GetClientsResponse")]
        System.Threading.Tasks.Task<AlphaParWebApplication.ServiceReference1.Client[]> GetClientsAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertClient", ReplyAction="http://tempuri.org/IService/InsertClientResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AlphaParWebApplication.ServiceReference1.ServiceFault), Action="http://tempuri.org/IService/InsertClientServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AlphaParWcfServiceLibrary")]
        AlphaParWebApplication.ServiceReference1.Client InsertClient(string token, AlphaParWebApplication.ServiceReference1.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/InsertClient", ReplyAction="http://tempuri.org/IService/InsertClientResponse")]
        System.Threading.Tasks.Task<AlphaParWebApplication.ServiceReference1.Client> InsertClientAsync(string token, AlphaParWebApplication.ServiceReference1.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteClient", ReplyAction="http://tempuri.org/IService/DeleteClientResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(AlphaParWebApplication.ServiceReference1.ServiceFault), Action="http://tempuri.org/IService/DeleteClientServiceFaultFault", Name="ServiceFault", Namespace="http://schemas.datacontract.org/2004/07/AlphaParWcfServiceLibrary")]
        bool DeleteClient(string token, AlphaParWebApplication.ServiceReference1.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteClient", ReplyAction="http://tempuri.org/IService/DeleteClientResponse")]
        System.Threading.Tasks.Task<bool> DeleteClientAsync(string token, AlphaParWebApplication.ServiceReference1.Client client);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : AlphaParWebApplication.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<AlphaParWebApplication.ServiceReference1.IService>, AlphaParWebApplication.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string LoginWithAD(string username, string password) {
            return base.Channel.LoginWithAD(username, password);
        }
        
        public System.Threading.Tasks.Task<string> LoginWithADAsync(string username, string password) {
            return base.Channel.LoginWithADAsync(username, password);
        }
        
        public string GetUsernameByToken(string token) {
            return base.Channel.GetUsernameByToken(token);
        }
        
        public System.Threading.Tasks.Task<string> GetUsernameByTokenAsync(string token) {
            return base.Channel.GetUsernameByTokenAsync(token);
        }
        
        public AlphaParWebApplication.ServiceReference1.Client[] GetClients(string token) {
            return base.Channel.GetClients(token);
        }
        
        public System.Threading.Tasks.Task<AlphaParWebApplication.ServiceReference1.Client[]> GetClientsAsync(string token) {
            return base.Channel.GetClientsAsync(token);
        }
        
        public AlphaParWebApplication.ServiceReference1.Client InsertClient(string token, AlphaParWebApplication.ServiceReference1.Client client) {
            return base.Channel.InsertClient(token, client);
        }
        
        public System.Threading.Tasks.Task<AlphaParWebApplication.ServiceReference1.Client> InsertClientAsync(string token, AlphaParWebApplication.ServiceReference1.Client client) {
            return base.Channel.InsertClientAsync(token, client);
        }
        
        public bool DeleteClient(string token, AlphaParWebApplication.ServiceReference1.Client client) {
            return base.Channel.DeleteClient(token, client);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteClientAsync(string token, AlphaParWebApplication.ServiceReference1.Client client) {
            return base.Channel.DeleteClientAsync(token, client);
        }
    }
}
